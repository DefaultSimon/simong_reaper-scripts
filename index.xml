<?xml version="1.0" encoding="utf-8"?>
<index version="1" name="simong Reaper Scripts" commit="f2aba467aece15962ec9e181e59b5780dab46830">
  <category name="FX">
    <reapack name="simong_Monitoring FX Bypass (based on FX names containing BYPASSABLE).lua" type="script" desc="Monitoring FX Bypass (based on FX names containing &quot;[BYPASSABLE]&quot;)">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 \fmodern Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 This package contains three scripts for bypassing, unbypassing and toggling monitor FX based on their FX name (FX whose name contains "[BYPASSABLE]" are bypassed, unbypassed and toggled by these scripts).\par}
}
]]></description>
        <link rel="website">https://github.com/DefaultSimon/simong_reaper-scripts</link>
      </metadata>
      <version name="1.0.6" author="Simon Goričar" time="2023-02-14T10:56:33Z">
        <changelog><![CDATA[- Removed external dependency on the shared library - now included directly with this package instead.]]></changelog>
        <source main="main" file="monitoring-fx-bypass/simong_Bypass all monitoring FX whose names contain BYPASSABLE.lua">https://github.com/DefaultSimon/simong_reaper-scripts/raw/c62bb1c00e72bb1c84ae95fcd896f33e68bf202b/FX/monitoring-fx-bypass/simong_Bypass%20all%20monitoring%20FX%20whose%20names%20contain%20BYPASSABLE.lua</source>
        <source main="main" file="monitoring-fx-bypass/simong_Toggle bypass on all monitoring FX which names containing BYPASSABLE.lua">https://github.com/DefaultSimon/simong_reaper-scripts/raw/c62bb1c00e72bb1c84ae95fcd896f33e68bf202b/FX/monitoring-fx-bypass/simong_Toggle%20bypass%20on%20all%20monitoring%20FX%20which%20names%20containing%20BYPASSABLE.lua</source>
        <source main="main" file="monitoring-fx-bypass/simong_Unbypass all monitoring FX whose names contain BYPASSABLE.lua">https://github.com/DefaultSimon/simong_reaper-scripts/raw/c62bb1c00e72bb1c84ae95fcd896f33e68bf202b/FX/monitoring-fx-bypass/simong_Unbypass%20all%20monitoring%20FX%20whose%20names%20contain%20BYPASSABLE.lua</source>
        <source file="monitoring-fx-bypass/simong_monitoring-fx-bypass-shared-library.lua">https://github.com/DefaultSimon/simong_reaper-scripts/raw/c62bb1c00e72bb1c84ae95fcd896f33e68bf202b/FX/monitoring-fx-bypass/simong_monitoring-fx-bypass-shared-library.lua</source>
      </version>
      <version name="1.0.8" author="Simon Goričar" time="2023-02-21T17:43:37Z">
        <changelog><![CDATA[- Fix script name typo (again).]]></changelog>
        <source main="main" file="monitoring-fx-bypass/simong_Bypass all monitoring FX whose names contain BYPASSABLE.lua">https://github.com/DefaultSimon/simong_reaper-scripts/raw/f2aba467aece15962ec9e181e59b5780dab46830/FX/monitoring-fx-bypass/simong_Bypass%20all%20monitoring%20FX%20whose%20names%20contain%20BYPASSABLE.lua</source>
        <source main="main" file="monitoring-fx-bypass/simong_Toggle bypass on all monitoring FX whose names contain BYPASSABLE.lua">https://github.com/DefaultSimon/simong_reaper-scripts/raw/f2aba467aece15962ec9e181e59b5780dab46830/FX/monitoring-fx-bypass/simong_Toggle%20bypass%20on%20all%20monitoring%20FX%20whose%20names%20contain%20BYPASSABLE.lua</source>
        <source main="main" file="monitoring-fx-bypass/simong_Unbypass all monitoring FX whose names contain BYPASSABLE.lua">https://github.com/DefaultSimon/simong_reaper-scripts/raw/f2aba467aece15962ec9e181e59b5780dab46830/FX/monitoring-fx-bypass/simong_Unbypass%20all%20monitoring%20FX%20whose%20names%20contain%20BYPASSABLE.lua</source>
        <source file="monitoring-fx-bypass/simong_monitoring-fx-bypass-shared-library.lua">https://github.com/DefaultSimon/simong_reaper-scripts/raw/f2aba467aece15962ec9e181e59b5780dab46830/FX/monitoring-fx-bypass/simong_monitoring-fx-bypass-shared-library.lua</source>
      </version>
    </reapack>
  </category>
  <category name="Track">
    <reapack name="simong_Create new empty MIDI track at the same position as the selected media item.lua" type="script" desc="Create new empty MIDI track at the same position as the selected media item">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 \fmodern Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 This script creates a new empty MIDI track at the same position (and of the same length) as the currently-selected media item. It also unselects the original media item and selects the newly created one.\par}
}
]]></description>
        <link rel="website">https://github.com/DefaultSimon/simong_reaper-scripts</link>
      </metadata>
      <version name="1.0.0" author="Simon Goričar" time="2023-02-12T19:55:07Z">
        <changelog><![CDATA[Initial version of the script.]]></changelog>
        <source main="main">https://github.com/DefaultSimon/simong_reaper-scripts/raw/5c793713ad537ef0c36c76f954d625d526a025b3/Track/simong_Create%20new%20empty%20MIDI%20track%20at%20the%20same%20position%20as%20the%20selected%20media%20item.lua</source>
      </version>
      <version name="1.0.1" author="Simon Goričar" time="2023-02-14T11:07:45Z">
        <changelog><![CDATA[- Remove external dependency on the shared library.]]></changelog>
        <source main="main">https://github.com/DefaultSimon/simong_reaper-scripts/raw/d3477a74e908b139bd0366901c297d0a67e086c1/Track/simong_Create%20new%20empty%20MIDI%20track%20at%20the%20same%20position%20as%20the%20selected%20media%20item.lua</source>
      </version>
    </reapack>
    <reapack name="simong_Hardware recording manager.lua" type="script" desc="Hardware recording manager">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 \fmodern Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 A script for managing monitoring and recording MIDI and audio data from your hardware devices (synths, etc.). You register a list of instruments that exist as track structures; then you can easily enable or disable MIDI IN/OUT/THROUGH and AUDIO IN paths for quick monitoring and recording.\par}
}
]]></description>
        <link rel="website">https://github.com/DefaultSimon/simong_reaper-scripts</link>
      </metadata>
      <version name="0.1.0" author="Simon Goričar" time="2023-02-19T18:39:44Z">
        <changelog><![CDATA[- Initial very bare version of the hardware recording manager script.]]></changelog>
        <source main="main" file="hardware-recording-manager/simong_hardware-recording-manager.lua">https://github.com/DefaultSimon/simong_reaper-scripts/raw/9c1bc3959391d46c2facf07aff78b60645d3c855/Track/hardware-recording-manager/simong_hardware-recording-manager.lua</source>
      </version>
      <version name="0.1.1" author="Simon Goričar" time="2023-02-20T17:04:39Z">
        <changelog><![CDATA[- Fix dependencies and internal library not being included in the script package.]]></changelog>
        <source main="main" file="hardware-recording-manager/simong_hardware-recording-manager.lua">https://github.com/DefaultSimon/simong_reaper-scripts/raw/1a0f2aa29ed910ceece7a782354649cbd50bce93/Track/hardware-recording-manager/simong_hardware-recording-manager.lua</source>
        <source file="hardware-recording-manager/external_libraries/inspect.lua">https://github.com/DefaultSimon/simong_reaper-scripts/raw/1a0f2aa29ed910ceece7a782354649cbd50bce93/Track/hardware-recording-manager/external_libraries/inspect.lua</source>
        <source file="hardware-recording-manager/external_libraries/middleclass.lua">https://github.com/DefaultSimon/simong_reaper-scripts/raw/1a0f2aa29ed910ceece7a782354649cbd50bce93/Track/hardware-recording-manager/external_libraries/middleclass.lua</source>
        <source file="hardware-recording-manager/internals/application.lua">https://github.com/DefaultSimon/simong_reaper-scripts/raw/1a0f2aa29ed910ceece7a782354649cbd50bce93/Track/hardware-recording-manager/internals/application.lua</source>
        <source file="hardware-recording-manager/internals/core.lua">https://github.com/DefaultSimon/simong_reaper-scripts/raw/1a0f2aa29ed910ceece7a782354649cbd50bce93/Track/hardware-recording-manager/internals/core.lua</source>
        <source file="hardware-recording-manager/internals/event_manager.lua">https://github.com/DefaultSimon/simong_reaper-scripts/raw/1a0f2aa29ed910ceece7a782354649cbd50bce93/Track/hardware-recording-manager/internals/event_manager.lua</source>
        <source file="hardware-recording-manager/internals/global.lua">https://github.com/DefaultSimon/simong_reaper-scripts/raw/1a0f2aa29ed910ceece7a782354649cbd50bce93/Track/hardware-recording-manager/internals/global.lua</source>
        <source file="hardware-recording-manager/internals/init.lua">https://github.com/DefaultSimon/simong_reaper-scripts/raw/1a0f2aa29ed910ceece7a782354649cbd50bce93/Track/hardware-recording-manager/internals/init.lua</source>
        <source file="hardware-recording-manager/internals/instrument.lua">https://github.com/DefaultSimon/simong_reaper-scripts/raw/1a0f2aa29ed910ceece7a782354649cbd50bce93/Track/hardware-recording-manager/internals/instrument.lua</source>
        <source file="hardware-recording-manager/internals/panels/add.lua">https://github.com/DefaultSimon/simong_reaper-scripts/raw/1a0f2aa29ed910ceece7a782354649cbd50bce93/Track/hardware-recording-manager/internals/panels/add.lua</source>
        <source file="hardware-recording-manager/internals/panels/base.lua">https://github.com/DefaultSimon/simong_reaper-scripts/raw/1a0f2aa29ed910ceece7a782354649cbd50bce93/Track/hardware-recording-manager/internals/panels/base.lua</source>
        <source file="hardware-recording-manager/internals/panels/init.lua">https://github.com/DefaultSimon/simong_reaper-scripts/raw/1a0f2aa29ed910ceece7a782354649cbd50bce93/Track/hardware-recording-manager/internals/panels/init.lua</source>
        <source file="hardware-recording-manager/internals/panels/instrument.lua">https://github.com/DefaultSimon/simong_reaper-scripts/raw/1a0f2aa29ed910ceece7a782354649cbd50bce93/Track/hardware-recording-manager/internals/panels/instrument.lua</source>
        <source file="hardware-recording-manager/internals/panels/manager.lua">https://github.com/DefaultSimon/simong_reaper-scripts/raw/1a0f2aa29ed910ceece7a782354649cbd50bce93/Track/hardware-recording-manager/internals/panels/manager.lua</source>
        <source file="hardware-recording-manager/internals/project.lua">https://github.com/DefaultSimon/simong_reaper-scripts/raw/1a0f2aa29ed910ceece7a782354649cbd50bce93/Track/hardware-recording-manager/internals/project.lua</source>
        <source file="hardware-recording-manager/internals/track.lua">https://github.com/DefaultSimon/simong_reaper-scripts/raw/1a0f2aa29ed910ceece7a782354649cbd50bce93/Track/hardware-recording-manager/internals/track.lua</source>
        <source file="hardware-recording-manager/internals/ui.lua">https://github.com/DefaultSimon/simong_reaper-scripts/raw/1a0f2aa29ed910ceece7a782354649cbd50bce93/Track/hardware-recording-manager/internals/ui.lua</source>
      </version>
    </reapack>
    <reapack name="simong_Move selected items onto child track (named [STEMS]).lua" type="script" desc="Move selected media items onto child track whose name contains &quot;[STEMS]&quot;">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 \fmodern Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 This script moves the selected media items from the track they are on (effectively the track the first selected item is on) to the child track whose name contains the phrase "[STEMS]".\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Part of a personal workflow thing I'm testing: I record a loop, use this action to push the recorded material into a child track that sends to the parent (so I can still hear what I just recorded), then record a new "overdub" on the original track (but it's just a new item, not a real overdub).\par}
{\pard \ql \f0 \sa180 \li0 \fi0 If no "[STEMS]"-matching track is found or if no media items are selected, this script does nothing.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 This makes it easier to separate multiple overdub "chunks" of your material into separate items and name them accordingly.\par}
}
]]></description>
        <link rel="website">https://github.com/DefaultSimon/simong_reaper-scripts</link>
      </metadata>
      <version name="1.0.0" author="Simon Goričar" time="2023-02-12T18:01:05Z">
        <changelog><![CDATA[Initial version of the script.]]></changelog>
        <source main="main">https://github.com/DefaultSimon/simong_reaper-scripts/raw/42d5a0fb01411eebc448e71eb87ca612257d481a/Track/simong_Move%20selected%20items%20onto%20child%20track%20(named%20%5BSTEMS%5D).lua</source>
      </version>
      <version name="1.0.1" author="Simon Goričar" time="2023-02-14T11:17:17Z">
        <changelog><![CDATA[- Removed dependency on the shared library that had to be manually installed from the repository.]]></changelog>
        <source main="main">https://github.com/DefaultSimon/simong_reaper-scripts/raw/d597a6a76915ef69aea78821fa9e204765148b53/Track/simong_Move%20selected%20items%20onto%20child%20track%20(named%20%5BSTEMS%5D).lua</source>
      </version>
    </reapack>
  </category>
  <metadata>
    <link rel="website">https://github.com/DefaultSimon/simong_reaper-scripts</link>
  </metadata>
</index>
